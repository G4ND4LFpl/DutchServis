@model DutchServisMCV.Models.LeagueInfo
@{
    ViewBag.Title = "Edytuj" + Model.Name;
}

<header>
    <h2>@Model.Name</h2>
</header>

@using (Html.BeginForm("Edit", "Leagues", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal wide">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <section>
            <!-- Edycja informacji o lidze -->
            <h4 class="mb-1">Edycja informacji o lidze</h4>

            <div class="form-group">
                <label class="control-label col-md-3" for="Id">Id</label>
                <div class="col-md-9">
                    @Html.TextBoxFor(model => model.Id, new { @readonly = "readonly", @class = "form-control text-box single-line", @autocomplete = "off" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-3" for="Name">Nazwa</label>
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                    <div class="text-danger">@ViewBag.NameValidationMsg</div>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-3" for="StartDate">Data rozpoczęcia</label>
                <div class="col-md-9">
                    @{
                        string start = (Model != null && Model.StartDate.HasValue) ? Model.StartDate.Value.ToString("yyyy-MM-dd") : "";
                    }
                    <input type="date" class="list-box form-control" id="StartDate" name="StartDate" value="@start" autocomplete="off">
                    <div class="text-danger">@ViewBag.StartDateValidationMsg</div>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-3" for="EndDate">Data zakończenia</label>
                <div class="col-md-9">
                    @{
                        string end = (Model != null && Model.EndDate.HasValue) ? Model.EndDate.Value.ToString("yyyy-MM-dd") : "";
                    }
                    <input type="date" class="list-box form-control" id="EndDate" name="EndDate" value="@end" autocomplete="off">
                    <div class="text-danger">@ViewBag.EndDateValidationMsg</div>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-3" for="ShowResults">Pokaż wyniki</label>
                <div class="col-md-9">
                    <div class="form-element">
                        @if (Model.ShowResults)
                        {
                            <input id="ShowResults" name="ShowResults" type="checkbox" value="true" checked />
                        }
                        else
                        {
                            <input id="ShowResults" name="ShowResults" type="checkbox" value="true" />
                        }
                    </div>
                </div>
            </div>

            <div class="form-group disp-only-sm">
                <label class="control-label col-md-2" for="File">Zdjęcie</label>
                <div class="col-md-3">
                    @{ string imgStr = "brak"; }
                    @if (Model.Img != null) { imgStr = "\"" + Model.Img + "\""; }
                    @imgStr
                </div>
            </div>

            <div class="form-group disp-md">
                <label class="control-label col-md-3" for="File">Zdjęcie</label>
                <div class="col-md-3">
                    <img class="img-responsive img-rounded border-1" id="img" />
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-3" for="File">Nowe zdjęcie</label>
                <div class="col-md-9">
                    <input id="File" name="File" type="file" class="form-element" accept=".png,.jpg,.jpeg" data-buttonText="Your label here." />
                    <div class="text-danger">@ViewBag.FileValidationMsg</div>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-3" for="Info">Informacje</label>
                <div class="col-md-9">
                    <div class="textbox">
                        <textarea class="list-box form-control" id="Info" name="Info" autocomplete="off">@Model.Info</textarea>
                    </div>
                </div>
            </div>
        </section>

        <section>
            <!-- Edycja listy graczy -->
            <h4>Lista graczy</h4>

            <div class="form-group">
                <div class="col-md-12">
                    <div class="checkbox">
                        <select class="list-box form-control disp-inline-block" id="select">
                            <option selected="selected" value="null">Brak</option>
                            @foreach (DutchServisMCV.Models.GameNamespace.PlayerItem item in ViewBag.Players)
                            {
                                <option value="@item.Id">@item.Nickname</option>
                                <!-- Javascript generated content -->
                            }
                        </select>
                        <button type="button" class="mx-1 disp-inline-block px-10" id="add_button">
                            Dodaj gracza
                        </button>
                    </div>
                </div>
            </div>

            <table class="table width-small">
                <thead class="table-style">
                    <tr>
                        <th>Nr.</th>
                        <th>Id</th>
                        <th>Nick</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody class="table-style" id="set_table">
                    <!-- Javascript generated content -->
                </tbody>
            </table>
        </section>

        <section>
            <!-- Edycja rozgrywek -->
            <h4>Rozgrywki</h4>

            <table class="table">
                <thead class="table-style">
                    <tr>
                        <th class="cell-1">Id</th>
                        <th class="cell-2">Gracz 1</th>
                        <th class="cell-1 disp-md">Punkty</th>
                        <th class="cell-1 disp-md">Punkty</th>
                        <th class="cell-2">Gracz 2</th>
                        <th class="cell-1"></th>
                        <th class="cell-1"></th>
                    </tr>
                </thead>
                <tbody class="table-style">
                    @foreach (DutchServisMCV.Models.MatchInfo match in Model.Matches)
                    {
                        <tr>
                            <td>@match.Id</td>
                            <td class="disp-sm">@match.Player1</td>
                            <td class="disp-only-xs">
                                @{ string p1 = match.Player1.Length <= 3 ? match.Player1 : match.Player1.Substring(0, 3); }
                                @(p1).
                            </td>
                            <td class="disp-md">@match.PointsPlayer1</td>
                            <td class="disp-md">@match.PointsPlayer2</td>
                            <td class="disp-sm">@match.Player2</td>
                            <td class="disp-only-xs">
                                @{ string p2 = match.Player2.Length <= 3 ? match.Player2 : match.Player2.Substring(0, 3); }
                                @(p2).
                            </td>
                            <td>
                                @Html.ActionLink("Edytuj", "Edit", "Matches", new { id = match.Id }, new { @class = "text-danger" })
                            </td>
                            <td>
                                @Html.ActionLink("Usuń", "Delete", "Matches", new { id = match.Id }, new { @class = "text-danger" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <a href="@Url.Action("Add", "Matches", new { tournament = Model.Name })" class="unstyled">
                <div class="disp-inline-block buttonlike mt-1">
                    Dodaj mecz
                </div>
            </a>
            <p class="text-danger disp-inline-block mt-1">
                Uwaga! Dodanie meczu spowoduje przeładowanie strony. Upewnij się, że inne zmiany zostały już zapisane.
            </p>
        </section>

        <section>
            <!-- Edycja wyników -->
            <h4>Wyniki</h4>

            <table class="table width-small">
                <thead class="table-style">
                    <tr>
                        <th>Gracz</th>
                        <th>Punkty</th>
                        <th>Nagroda</th>
                    </tr>
                </thead>
                <tbody class="table-style" id="result_table">
                    <!-- Javascript generated content -->
                </tbody>
            </table>
        </section>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-9">
                <input type="submit" value="Zapisz zmiany" class="btn-warning" />
                <a href="@Url.Action("Index", new { name=Model.Name })">
                    <div class="disp-inline-block buttonlike-heavy">
                        Odrzuć zmiany
                    </div>
                </a>
            </div>
        </div>
    </div>
}

<script type="text/jscript">
    var collection = (@Html.Raw(Json.Encode(Model))).Players;

    var path = @Url.Content("~/Content/");
    SetPath('img', 'tournamentdata/', '@Model.Img', 'empty.png');

    let setTCG = new TableContentGenerator("Players", "set_table", [
        { Name: "Nr", Type: AttType.Number },
        { Name: "Id", Type: AttType.Readonly },
        { Name: "Nickname", Type: AttType.Readonly },
        { Name: "Delete", Type: AttType.Delete }
    ]);
    let resultTCG = new TableContentGenerator("Players", "result_table", [
        { Name: "Nickname", Type: AttType.Text },
        { Name: "Points", Type: AttType.Readonly },
        { Name: "Price", Type: AttType.Input }
    ]);
    let playerSC = new SelectController("select", @Html.Raw(Json.Encode(ViewBag.Players)), { Id: "Id", Text: "Nickname" }, "Brak");
    let addAC = new AddPlayerController("add_button");

    let manager = new ContentManager([setTCG, resultTCG ], playerSC, addAC);
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
